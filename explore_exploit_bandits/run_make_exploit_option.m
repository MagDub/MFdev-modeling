
close all;

load('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\part_num.mat')

ID_mat = part_num'; 

%%%%%

[chosenOptionFreqABD,chosenOptionFreqABD_desc,exploitMatABD_LH, exploitMatABD_LH_desc, FreqisExploited_ABD, FreqisExplored_ABD]=make_exploit_option_ABD(ID_mat);
[chosenOptionFreqAB,chosenOptionFreqAB_desc,exploitMatAB_LH, exploitMatAB_LH_desc, FreqisExploited_AB, FreqisExplored_AB]=make_exploit_option_AB(ID_mat);
[chosenOptionFreqBD,chosenOptionFreqBD_desc,exploitMatBD_LH, exploitMatBD_LH_desc, FreqisExploited_BD, FreqisExplored_BD]=make_exploit_option_BD(ID_mat);
[chosenOptionFreqAD,chosenOptionFreqAD_desc,exploitMatAD_LH, exploitMatAD_LH_desc, FreqisExploited_AD, FreqisExplored_AD]=make_exploit_option_AD(ID_mat);


for ID_n = 1:size(ID_mat,2)
    part = ID_mat(ID_n);
%     if round(chosenOptionFreqAD(ID_n,1)*(96/8)) ~= (FreqisExploited_AD{ID_n}.TreeA_SH+FreqisExploited_AD{ID_n}.TreeB_SH)
    if round(chosenOptionFreqAD(ID_n,1)) ~= (FreqisExploited_AD{ID_n}.TreeA_SH+FreqisExploited_AD{ID_n}.TreeB_SH)
        disp(strcat('something wrong with part',int2str(part)))
    end
end

chosenOption.ABD.desc = chosenOptionFreqABD_desc;
chosenOption.ABD.freq = chosenOptionFreqABD;
chosenOption.AB.desc = chosenOptionFreqAB_desc;
chosenOption.AB.freq = chosenOptionFreqAB;
chosenOption.BD.desc = chosenOptionFreqBD_desc;
chosenOption.BD.freq = chosenOptionFreqBD;
chosenOption.AD.desc = chosenOptionFreqAD_desc;
chosenOption.AD.freq = chosenOptionFreqAD;

for ID_n=1:size(ID_mat,2)
    FreqisExploited_TreeA_LH(ID_n) = FreqisExploited_ABD{ID_n}.TreeA_LH + FreqisExploited_AB{ID_n}.TreeA_LH + FreqisExploited_BD{ID_n}.TreeA_LH + FreqisExploited_AD{ID_n}.TreeA_LH;
    FreqisExploited_TreeA_SH(ID_n) = FreqisExploited_ABD{ID_n}.TreeA_SH + FreqisExploited_AB{ID_n}.TreeA_SH + FreqisExploited_BD{ID_n}.TreeA_SH + FreqisExploited_AD{ID_n}.TreeA_SH;
    FreqisExploited_TreeB_LH(ID_n) = FreqisExploited_ABD{ID_n}.TreeB_LH + FreqisExploited_AB{ID_n}.TreeB_LH+ FreqisExploited_BD{ID_n}.TreeB_LH + FreqisExploited_AD{ID_n}.TreeB_LH;
    FreqisExploited_TreeB_SH(ID_n) = FreqisExploited_ABD{ID_n}.TreeB_SH + FreqisExploited_AB{ID_n}.TreeB_SH + FreqisExploited_BD{ID_n}.TreeB_SH + FreqisExploited_AD{ID_n}.TreeB_SH;
end

for ID_n=1:size(ID_mat,2)
    FreqisExplored_TreeA_LH(ID_n) = FreqisExplored_ABD{ID_n}.TreeA_LH + FreqisExplored_AB{ID_n}.TreeA_LH + FreqisExplored_BD{ID_n}.TreeA_LH + FreqisExplored_AD{ID_n}.TreeA_LH;
    FreqisExplored_TreeA_SH(ID_n) = FreqisExplored_ABD{ID_n}.TreeA_SH + FreqisExplored_AB{ID_n}.TreeA_SH + FreqisExplored_BD{ID_n}.TreeA_SH + FreqisExplored_AD{ID_n}.TreeA_SH;
    FreqisExplored_TreeB_LH(ID_n) = FreqisExplored_ABD{ID_n}.TreeB_LH + FreqisExplored_AB{ID_n}.TreeB_LH+ FreqisExplored_BD{ID_n}.TreeB_LH + FreqisExplored_AD{ID_n}.TreeB_LH;
    FreqisExplored_TreeB_SH(ID_n) = FreqisExplored_ABD{ID_n}.TreeB_SH + FreqisExplored_AB{ID_n}.TreeB_SH + FreqisExplored_BD{ID_n}.TreeB_SH + FreqisExplored_AD{ID_n}.TreeB_SH;
end

for ID_n=1:size(ID_mat,2)
    FreqisExploited_TreeA_LH_ACD_BCD(ID_n) = FreqisExploited_BD{ID_n}.TreeA_LH + FreqisExploited_AD{ID_n}.TreeA_LH;
    FreqisExploited_TreeA_SH_ACD_BCD(ID_n) = FreqisExploited_BD{ID_n}.TreeA_SH + FreqisExploited_AD{ID_n}.TreeA_SH;
    FreqisExploited_TreeB_LH_ACD_BCD(ID_n) = FreqisExploited_BD{ID_n}.TreeB_LH + FreqisExploited_AD{ID_n}.TreeB_LH;
    FreqisExploited_TreeB_SH_ACD_BCD(ID_n) = FreqisExploited_BD{ID_n}.TreeB_SH + FreqisExploited_AD{ID_n}.TreeB_SH;
end

for ID_n=1:size(ID_mat,2)
    FreqisExplored_TreeA_LH_ACD_BCD(ID_n) = FreqisExplored_BD{ID_n}.TreeA_LH + FreqisExplored_AD{ID_n}.TreeA_LH;
    FreqisExplored_TreeA_SH_ACD_BCD(ID_n) = FreqisExplored_BD{ID_n}.TreeA_SH + FreqisExplored_AD{ID_n}.TreeA_SH;
    FreqisExplored_TreeB_LH_ACD_BCD(ID_n) = FreqisExplored_BD{ID_n}.TreeB_LH + FreqisExplored_AD{ID_n}.TreeB_LH;
    FreqisExplored_TreeB_SH_ACD_BCD(ID_n) = FreqisExplored_BD{ID_n}.TreeB_SH + FreqisExplored_AD{ID_n}.TreeB_SH;
end

FreqisExploited_desc = {'A_LH', 'A_SH', 'B_LH', 'B_SH'};
FreqisExplored_desc = {'A_LH', 'A_SH', 'B_LH', 'B_SH'};

FreqisExploited = [FreqisExploited_TreeA_LH', FreqisExploited_TreeA_SH', FreqisExploited_TreeB_LH', FreqisExploited_TreeB_SH'];
FreqisExplored = [FreqisExplored_TreeA_LH', FreqisExplored_TreeA_SH', FreqisExplored_TreeB_LH', FreqisExplored_TreeB_SH'];

FreqisExploited_ACD_BCD = [FreqisExploited_TreeA_LH_ACD_BCD', FreqisExploited_TreeA_SH_ACD_BCD', FreqisExploited_TreeB_LH_ACD_BCD', FreqisExploited_TreeB_SH_ACD_BCD'];
FreqisExplored_ACD_BCD = [FreqisExplored_TreeA_LH_ACD_BCD', FreqisExplored_TreeA_SH_ACD_BCD', FreqisExplored_TreeB_LH_ACD_BCD', FreqisExplored_TreeB_SH_ACD_BCD'];

save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\chosenOption.mat', 'chosenOption')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\\FreqisExploited.mat', 'FreqisExploited')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\FreqisExploited_ACD_BCD.mat', 'FreqisExploited_ACD_BCD')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\FreqisExploited_desc.mat', 'FreqisExploited_desc')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\FreqisExplored.mat', 'FreqisExplored')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\FreqisExplored_desc.mat', 'FreqisExplored_desc')

save('D:\writing\MF_dev\data_for_figs_2\chosenOption.mat', 'chosenOption')
save('D:\writing\MF_dev\data_for_figs_2\FreqisExploited.mat', 'FreqisExploited')
save('D:\writing\MF_dev\data_for_figs_2\FreqisExploited_ACD_BCD.mat', 'FreqisExploited_ACD_BCD')
save('D:\writing\MF_dev\data_for_figs_2\FreqisExploited_desc.mat', 'FreqisExploited_desc')
save('D:\writing\MF_dev\data_for_figs_2\FreqisExplored.mat', 'FreqisExplored')
save('D:\writing\MF_dev\data_for_figs_2\FreqisExplored_desc.mat', 'FreqisExplored_desc')

for ID_n=1:size(ID_mat,2)
    tmpABD=exploitMatABD_LH{ID_n};
    tmpAB=exploitMatAB_LH{ID_n};
    tmpBD=exploitMatBD_LH{ID_n};
    tmpAD=exploitMatAD_LH{ID_n};
    tmp_exploited=[tmpABD(:,1)==tmpABD(:,2),tmpABD(:,3),tmpABD(:,4),tmpABD(:,5),tmpABD(:,6),tmpABD(:,7);...
                    tmpAB(:,1)==tmpAB(:,2),tmpAB(:,3),tmpAB(:,4),tmpAB(:,5),tmpAB(:,6), tmpAB(:,7);...
                    tmpBD(:,1)==tmpBD(:,2),tmpBD(:,3),tmpBD(:,4),tmpBD(:,5),tmpBD(:,6), tmpBD(:,7);...
                    tmpAD(:,1)==tmpAD(:,2),tmpAD(:,3),tmpAD(:,4),tmpAD(:,5),tmpAD(:,6), tmpAD(:,7)];
    exploited{ID_n}=tmp_exploited;
    mean_per_part(ID_n,:)= [mean(tmp_exploited(tmp_exploited(:,1)==1,3)) mean(tmp_exploited(tmp_exploited(:,1)==0,3))];
end

exploited_desc = {'Exploited','GameID','SizePicked','Block','BlockTrial','SizeExploitationOption'}; 
mean_per_part_desc={'mean_when_exploited','mean_when_explored'};

[apple_sizes_LH, apple_sizes_LH_desc] = make_explore_exploit_averages(ID_mat); %problem, apple_sizes for participant > 1 does not have 100 unique trialID

score_mat_all_apples = {};

for ID_n=1:size(ID_mat,2)
    
    tmp = exploited{ID_n};
    tmp_app = apple_sizes_LH{ID_n}; % only LH
    
    mat_exploit(:,1) = tmp(:,4)*1000+tmp(:,5); %BlocktrialID
    mat_exploit(:,2) = tmp(:,1); %exploited
    mat_exploit(:,3) = tmp(:,3); %size picked
    mat_exploit(:,4) = tmp(:,6); %size of exploitation option
    if size(unique(mat_exploit(:,1)),1)~=96/2
        disp('problem, should be 48 trials')
    end
    
    mat_exploit_app(:,1) = tmp_app(:,1)*1000+tmp_app(:,2); %BlocktrialID
    mat_exploit_app(:,2:7) = tmp_app(:,4:9); % all apples picked
    if size(unique(mat_exploit_app(:,1)),1)~=96/2
        disp('problem, should be 48 trials')
    end

    % Match the 2 BlockTrialIDs
    sorted_mat_exploit=sortrows(mat_exploit,1); % should be 48
    sorted_mat_exploit_app=sortrows(mat_exploit_app,1); % should be 48

    if unique(sorted_mat_exploit(:,1)==sorted_mat_exploit_app(:,1))==1 && unique(sorted_mat_exploit(:,3)==sorted_mat_exploit_app(:,2))==1
        score_mat_all_apples{ID_n} = [sorted_mat_exploit(:,1:2) sorted_mat_exploit_app(:,2:7) sorted_mat_exploit(:,4)];
    else
        disp('gameIDs or size of 1st app dont match')
    end
end

score_mat_all_apples_desc = {'BlocktrialID','LHisExploited','Apple1Size','Apple2Size','Apple3Size','Apple4Size','Apple5Size','Apple6Size', 'SizeExploitationOption'};


save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\score_mat_all_apples_ID_mat.mat','ID_mat')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\score_mat_all_apples.mat','score_mat_all_apples')
save('C:\Users\mdubois\Google Drive\UCL\writing\MF_dev\data_for_figs_2\score_mat_all_apples_desc.mat','score_mat_all_apples_desc')

save('D:\writing\MF_dev\data_for_figs_2\score_mat_all_apples_ID_mat.mat','ID_mat')
save('D:\writing\MF_dev\data_for_figs_2\score_mat_all_apples.mat','score_mat_all_apples')
save('D:\writing\MF_dev\data_for_figs_2\score_mat_all_apples_desc.mat','score_mat_all_apples_desc')



